// Generated by CoffeeScript 1.6.3
var telescopicText;

telescopicText = {};

telescopicText.graphs = {};

telescopicText.Graph = (function() {
  function Graph(name) {
    telescopicText.graphs[name] = this;
    this.nodes = {};
    /* private*/

    this.getName = function() {
      return name;
    };
    /* class method*/

  }

  return Graph;

})();

telescopicText.Vertex = (function() {
  function Vertex(name, content, children, remain_after_click, next, graph) {
    this.content = content;
    this.children = children != null ? children : [[]];
    if (remain_after_click == null) {
      remain_after_click = false;
    }
    if (graph == null) {
      graph = "telescopicDefaultID";
    }
    if (!telescopicText.graphs[graph]) {
      new telescopicText.Graph(graph);
    }
    graph = telescopicText.graphs[graph];
    graph[name] = this;
    this.tree_edge;
    this.forward_edge;
    this.back_edge;
    this.cross_edge;
    /* private*/

    this.getName = function() {
      return name;
    };
    this.getGraph = function() {
      return graph;
    };
    this.getNext = function() {
      return next;
    };
    this.getRemainAfterClick = function() {
      return remain_after_click;
    };
    this.setChildrenReferences = function() {
      var child, child_index, missing_child, set_index, _results;
      set_index = 0;
      _results = [];
      while (set_index < this.children.length) {
        child_index = 0;
        while (child_index < this.children[set_index].length) {
          child = this.children[set_index][child_index];
          if (!graph[child]) {
            missing_child = this.children[set_index][child_index];
            console.log('Vertex ' + this.name + ' in graph "' + graph.getName() + '" is missing a child, "' + missing_child + '". It will be removed from the vertex children.');
            this.children[set_index].splice(child_index, 1);
          } else {
            this.children[set_index][child_index] = graph[child];
            child_index += 1;
          }
        }
        _results.push(set_index += 1);
      }
      return _results;
    };
  }

  return Vertex;

})();

new telescopicText.Graph('telescopicDefaultID');
